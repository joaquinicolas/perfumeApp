{"version":3,"file":"main.js","sourceRoot":"","sources":["../main.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,uCAAuD;AACvD,2BAA2B;AAC3B,6BAA6B;AAC7B,qCAA2C;AAC3C,+BAA4B;AAC5B,kDAA+C;AAC/C,oEAAiE;AACjE,kDAA+C;AAE/C,IAAI,GAAkB,CAAC;AAEvB,SAAS,YAAY;IACnB,GAAG,GAAG,IAAI,wBAAa,CAAC;QACtB,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,eAAe,EAAE,SAAS;QAC1B,cAAc,EAAE;YACd,eAAe,EAAE,IAAI;SACtB;KACF,CAAC,CAAA;IAEF,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACrB,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,uBAAuB,CAAC;QAC1D,QAAQ,EAAE,OAAO;QACjB,OAAO,EAAE,IAAI;KACd,CAAC,CAAC,CAAC;IAEJ,GAAG,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAE/B,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;QACpB,GAAG,GAAG,IAAI,CAAA;IACZ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,cAAG,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAC9B,cAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC/B,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;QACjC,cAAG,CAAC,IAAI,EAAE,CAAC;KACZ;AACH,CAAC,CAAC,CAAC;AACH,cAAG,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;IACtB,IAAI,GAAG,KAAK,IAAI,EAAE;QAChB,YAAY,EAAE,CAAC;KAChB;AACH,CAAC,CAAC,CAAA;AAEF,kBAAO,CAAC,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE;IAC/B,OAAO,EAAE,CAAC,IAAI,EAAE;SACb,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,SAAG,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SACjD,IAAI,CAAC,SAAS,CAAC,EAAE;QAChB,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;IACnD,CAAC,CAAC;SACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,MAAM,EAAE,GAAG;IACT,IAAI,EAAE,GAAG,EAAE;QACT,OAAO,0BAAgB,CAAC;YACtB,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,iBAAiB,CAAC;YACpD,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE;gBACR,qBAAS;gBACT,uCAAkB;gBAClB,qBAAS;aACV;SAEF,CAAC,CAAC;IACL,CAAC;CACF,CAAC","sourcesContent":["import \"reflect-metadata\";\nimport { app, BrowserWindow, ipcMain } from \"electron\";\nimport * as url from \"url\";\nimport * as path from \"path\";\nimport { createConnection } from \"typeorm\";\nimport { API } from \"./api\";\nimport { Fragancia } from './entity/Fragancia';\nimport { FraganciaCommodity } from './entity/FraganciaCommodity';\nimport { Commodity } from './entity/Commodity';\n\nlet win: BrowserWindow;\n\nfunction createWindow() {\n  win = new BrowserWindow({\n    width: 600,\n    height: 600,\n    backgroundColor: '#ffffff',\n    webPreferences: {\n      nodeIntegration: true\n    },\n  })\n\n  win.loadURL(url.format({\n    pathname: path.resolve(__dirname, '../../dist/index.html'),\n    protocol: 'file:',\n    slashes: true\n  }));\n\n  win.webContents.openDevTools();\n\n  win.on('closed', () => {\n    win = null\n  });\n}\n\napp.on('ready', createWindow);\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\napp.on('activate', () => {\n  if (win === null) {\n    createWindow();\n  }\n})\n\nipcMain.on('getFragancias', () => {\n  return DB.init()\n    .then(connection => API.getFragancias(connection))\n    .then(fragments => {\n      win.webContents.send('getFragancias', fragments);\n    })\n    .catch(err => console.error(err));\n});\n\nconst DB = {\n  init: () => {\n    return createConnection({\n      type: \"sqlite\",\n      database: path.resolve(__dirname, '../../db.sqlite'),\n      synchronize: true,\n      logging: false,\n      entities: [\n        Fragancia,\n        FraganciaCommodity,\n        Commodity\n      ],\n\n    });\n  },\n};\n"]}